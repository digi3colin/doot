package doot {	import com.fastframework.core.SingletonError;	import doot.net.LoaderEvent;	import doot.net.LoaderFactory;	import com.fastframework.core.FASTEventDispatcher;	import com.fastframework.net.ILoader;	import flash.events.Event;	/**	 * @author colin	 */	public class I18n extends FASTEventDispatcher{		private static var ins : I18n;		public static const EVENT_READY : String = "EVENT_READY";		private var strLoader:ILoader;		private var isLoading:Boolean = false;		private var city:String;		private var lang:String;		private var translates:Object;		public static function instance():I18n{			return ins|| new I18n();		}		public function I18n(){			if(ins!=null)throw new SingletonError(this);			ins = this;			strLoader = LoaderFactory.instance().getXMLLoader();			strLoader.once(LoaderEvent.READY, translateLoaded);		}		public function setCity(str:String):void{			this.city = str;		}				public function setLang(str:String):void{			this.lang = str;		}		private function translateLoaded(e:Event):void{			var xData:XML = ILoader(e.target).getContext();			var firstChild:XML = xData.children()[0];			var localeKeys:LocaleKeyCollection = new LocaleKeyCollection(firstChild.elements('key'));			translates = {};			var entries:XMLList = XML(xData.child('Entries')[0]).children();			var entriesCount:int = entries.length();			var entry:XML;			for(var i:int=0;i<entriesCount;i++){				entry = entries[i];				translates[String(entry.children()[0])]=new TranslateEntry(entry.children(), localeKeys);			}			dispatchEvent(new Event(I18n.EVENT_READY));		}		public function load():void{			if(translates!=null)dispatchEvent(new Event(I18n.EVENT_READY));			if(isLoading==true)return;			isLoading = true;			strLoader.load(ResolveLink.instance().create('translate.xml',false,false));		}		public function t(key:String):String{			if(translates[key]==null)return key;			return TranslateEntry(translates[key]).getTranslatedStringByLang(city+'_'+lang);		}		public function html(key:String,size:int=12,color:String="#000000",font:String="FontBody"):String{			return '<font face="'+font+'" size="'+size+'" color="'+color+'">'+t(key)+'</font>';		}		public static function html(key:String,size:int=12,color:String="#000000",font:String="FontBody"):String{			return I18n.instance().html(key, size, color, font);		}		public static function t(key:String):String{			return I18n.instance().t(key);		}	}}